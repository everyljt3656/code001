<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">
		
		
	<!-- 加载数据库配置文件 -->
	<context:property-placeholder location="classpath:db.properties"/>
	
	<!-- 创建数据源 c3po连接池 -->
	<!-- <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"> -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
		<property name="driverClassName" value="${jdbc.driverClass}" />
		<property name="url" value="${jdbc.jdbcUrl}" />
		<property name="username" value="${jdbc.user}" />
		<property name="password" value="${jdbc.password}" />
	</bean>
	
	<!-- 配置sqlSession工厂 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 指定mybatis全局配置文件SqlMapConfig.xml的路径 -->
		<property name="configLocation" value="classpath:sqlMapConfig.xml"></property>
		<!-- 自动扫描需要定义类别名的包，将包内的JAVA类的类名作为类别名 整合mybatis别名-->
		<property name="typeAliasesPackage" value="com.every.ssm.po"></property>
		<!-- 数据源 -->
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	<!-- 
		配置mybatis接口代理开发
		接口类名和映射文件必须同名
		接口类和映射文件必须在同一个目录　下
		映射文件namespace名字必须是接口的全类路径名
		接口的方法名必须和映射Statement的ｉｄ一致
	        自动扫描所有的Mapper接口与文件
	 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
	    <property name="basePackage" value="com.every.ssm.mapper"></property>
	    <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean>
	
	<!-- 事务管理 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	<!-- 配置通知 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="save*" propagation="REQUIRED" read-only="false" isolation="DEFAULT" rollback-for="java.lang.Exception" timeout="120"/>
			<tx:method name="update*" propagation="REQUIRED" read-only="false" isolation="DEFAULT" rollback-for="java.lang.Exception" timeout="120"/>
			<tx:method name="insert*" propagation="REQUIRED" read-only="false" isolation="DEFAULT" rollback-for="java.lang.Exception" timeout="120"/>
			<tx:method name="delete*" propagation="REQUIRED" read-only="false" isolation="DEFAULT" rollback-for="java.lang.Exception" timeout="120"/>
			<tx:method name="*" propagation="REQUIRED" read-only="false" isolation="DEFAULT" rollback-for="java.lang.Exception" timeout="120"/>
		</tx:attributes>
	</tx:advice>
	
	
	<!-- 配置aop切面拦截service -->
	<aop:config>
		<!-- 切点 -->
		<aop:pointcut expression="execution(* com.every.ssm.service.*.*(..))" id="txCut"/>
		<!-- 切面 -->
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txCut"/>
	</aop:config>
	
	
</beans>
