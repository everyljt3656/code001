<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.every.ssm.mapper.CustMapper">
	<resultMap id="BaseResultMap" type="com.every.ssm.po.Cust">
		<id column="cid" property="cid" jdbcType="INTEGER" />
		<result column="cust_name" property="custName" jdbcType="VARCHAR" />
		<result column="cust_type" property="custType" jdbcType="VARCHAR" />
		<result column="cust_phone" property="custPhone" jdbcType="VARCHAR" />
		<result column="cust_address" property="custAddress" jdbcType="VARCHAR" />
		<result column="cust_link_user" property="custLinkUser"
			jdbcType="INTEGER" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		cid, cust_name, cust_type, cust_phone, cust_address, cust_link_user
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.every.ssm.po.CustExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from s_cust
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from s_cust
		where cid = #{cid,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from s_cust
		where cid = #{cid,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="com.every.ssm.po.CustExample">
		delete from s_cust
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.every.ssm.po.Cust">
		insert into s_cust (cid, cust_name, cust_type,
		cust_phone, cust_address, cust_link_user
		)
		values (#{cid,jdbcType=INTEGER}, #{custName,jdbcType=VARCHAR},
		#{custType,jdbcType=VARCHAR},
		#{custPhone,jdbcType=VARCHAR}, #{custAddress,jdbcType=VARCHAR}, #{custLinkUser,jdbcType=INTEGER}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.every.ssm.po.Cust">
		insert into s_cust
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="cid != null">
				cid,
			</if>
			<if test="custName != null">
				cust_name,
			</if>
			<if test="custType != null">
				cust_type,
			</if>
			<if test="custPhone != null">
				cust_phone,
			</if>
			<if test="custAddress != null">
				cust_address,
			</if>
			<if test="custLinkUser != null">
				cust_link_user,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="cid != null">
				#{cid,jdbcType=INTEGER},
			</if>
			<if test="custName != null">
				#{custName,jdbcType=VARCHAR},
			</if>
			<if test="custType != null">
				#{custType,jdbcType=VARCHAR},
			</if>
			<if test="custPhone != null">
				#{custPhone,jdbcType=VARCHAR},
			</if>
			<if test="custAddress != null">
				#{custAddress,jdbcType=VARCHAR},
			</if>
			<if test="custLinkUser != null">
				#{custLinkUser,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.every.ssm.po.CustExample"
		resultType="java.lang.Integer">
		select count(*) from s_cust
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update s_cust
		<set>
			<if test="record.cid != null">
				cid = #{record.cid,jdbcType=INTEGER},
			</if>
			<if test="record.custName != null">
				cust_name = #{record.custName,jdbcType=VARCHAR},
			</if>
			<if test="record.custType != null">
				cust_type = #{record.custType,jdbcType=VARCHAR},
			</if>
			<if test="record.custPhone != null">
				cust_phone = #{record.custPhone,jdbcType=VARCHAR},
			</if>
			<if test="record.custAddress != null">
				cust_address = #{record.custAddress,jdbcType=VARCHAR},
			</if>
			<if test="record.custLinkUser != null">
				cust_link_user = #{record.custLinkUser,jdbcType=INTEGER},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update s_cust
		set cid = #{record.cid,jdbcType=INTEGER},
		cust_name = #{record.custName,jdbcType=VARCHAR},
		cust_type = #{record.custType,jdbcType=VARCHAR},
		cust_phone = #{record.custPhone,jdbcType=VARCHAR},
		cust_address = #{record.custAddress,jdbcType=VARCHAR},
		cust_link_user = #{record.custLinkUser,jdbcType=INTEGER}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.every.ssm.po.Cust">
		update s_cust
		<set>
			<if test="custName != null">
				cust_name = #{custName,jdbcType=VARCHAR},
			</if>
			<if test="custType != null">
				cust_type = #{custType,jdbcType=VARCHAR},
			</if>
			<if test="custPhone != null">
				cust_phone = #{custPhone,jdbcType=VARCHAR},
			</if>
			<if test="custAddress != null">
				cust_address = #{custAddress,jdbcType=VARCHAR},
			</if>
			<if test="custLinkUser != null">
				cust_link_user = #{custLinkUser,jdbcType=INTEGER},
			</if>
		</set>
		where cid = #{cid,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.every.ssm.po.Cust">
		update s_cust
		set cust_name = #{custName,jdbcType=VARCHAR},
		cust_type = #{custType,jdbcType=VARCHAR},
		cust_phone = #{custPhone,jdbcType=VARCHAR},
		cust_address = #{custAddress,jdbcType=VARCHAR},
		cust_link_user = #{custLinkUser,jdbcType=INTEGER}
		where cid = #{cid,jdbcType=INTEGER}
	</update>

	<sql id="joinselect">
		SELECT
		c.cid,
		c.cust_name custName,
		c.cust_type custType,
		c.cust_phone custPhone,
		c.cust_address custAddress,
		u.nickname
		FROM s_cust c
		LEFT JOIN s_user u
		ON u.uid = c.cust_link_user
		
	</sql>
	
	<select id="selectCustListByQueryVo" parameterType="cust" resultType="cust">
		<include refid="joinselect"/>
		<where>
			<if test="custName!=null and custName!=''">
				c.cust_name like "%"#{custName}"%"
			</if>
			
			<if test="custType!=null and custType!=''">
				and c.cust_type=#{custType}
			</if>
			
		</where>
	</select>


</mapper>